{
  "paragraphs": [
    {
      "text": "val df \u003d spark.read\n    .format(\"org.neo4j.spark.DataSource\")\n    .option(\"url\", \"bolt://neo4j:7687\")\n    .option(\"authentication.type\", \"basic\")\n    .option(\"authentication.basic.username\", \"neo4j\")\n    .option(\"authentication.basic.password\", \"zeppelin\")\n    .option(\"labels\", \"Instrument\")\n    .load\n    \ndf.show()",
      "user": "anonymous",
      "dateUpdated": "2020-09-09 14:18:40.766",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+----+------------+------+\n|\u003cid\u003e|    \u003clabels\u003e|  name|\n+----+------------+------+\n|   4|[Instrument]| Drums|\n|   5|[Instrument]|Guitar|\n+----+------------+------+\n\n\u001b[1m\u001b[34mdf\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m \u003d [\u003cid\u003e: bigint, \u003clabels\u003e: array\u003cstring\u003e ... 1 more field]\n"
          }
        ]
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1598858554521_1265987943",
      "id": "paragraph_1598858554521_1265987943",
      "dateCreated": "2020-08-31 07:22:34.522",
      "dateStarted": "2020-09-09 14:18:40.780",
      "dateFinished": "2020-09-09 14:18:42.140",
      "status": "FINISHED"
    },
    {
      "text": "val df \u003d spark.read\n    .format(\"org.neo4j.spark.DataSource\")\n    .option(\"url\", \"bolt://neo4j:7687\")\n    .option(\"authentication.type\", \"basic\")\n    .option(\"authentication.basic.username\", \"neo4j\")\n    .option(\"authentication.basic.password\", \"zeppelin\")\n    .option(\"relationship.nodes.map\", \"false\")\n    .option(\"relationship\", \"DIRECTED\")\n    .option(\"relationship.source.labels\", \"Person\")\n    .option(\"relationship.target.labels\", \"Movie\")\n    .load\n    \ndf.show()",
      "user": "anonymous",
      "dateUpdated": "2020-08-31 10:17:03.430",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+--------+----------+-----------+---------------+--------------------+-----------+-----------+---------------+--------------------+--------------------+---------------+\n|\u003crel.id\u003e|\u003crel.type\u003e|\u003csource.id\u003e|\u003csource.labels\u003e|         source.name|source.born|\u003ctarget.id\u003e|\u003ctarget.labels\u003e|        target.title|      target.tagline|target.released|\n+--------+----------+-----------+---------------+--------------------+-----------+-----------+---------------+--------------------+--------------------+---------------+\n|       0|  DIRECTED|          6|       [Person]|      Lana Wachowski|       1965|          0|        [Movie]|          The Matrix|Welcome to the Re...|           1999|\n|       0|  DIRECTED|          5|       [Person]|     Lilly Wachowski|       1967|          0|        [Movie]|          The Matrix|Welcome to the Re...|           1999|\n|       0|  DIRECTED|          5|       [Person]|     Lilly Wachowski|       1967|          9|        [Movie]| The Matrix Reloaded|      Free your mind|           2003|\n|       0|  DIRECTED|          6|       [Person]|      Lana Wachowski|       1965|          9|        [Movie]| The Matrix Reloaded|      Free your mind|           2003|\n|       0|  DIRECTED|          6|       [Person]|      Lana Wachowski|       1965|         10|        [Movie]|The Matrix Revolu...|Everything that h...|           2003|\n|       0|  DIRECTED|          5|       [Person]|     Lilly Wachowski|       1967|         10|        [Movie]|The Matrix Revolu...|Everything that h...|           2003|\n|       0|  DIRECTED|         14|       [Person]|     Taylor Hackford|       1944|         11|        [Movie]|The Devil\u0027s Advocate|Evil has its winn...|           1997|\n|       0|  DIRECTED|         27|       [Person]|          Rob Reiner|       1947|         15|        [Movie]|      A Few Good Men|In the heart of t...|           1992|\n|       0|  DIRECTED|         35|       [Person]|          Tony Scott|       1944|         29|        [Movie]|             Top Gun|I feel the need, ...|           1986|\n|       0|  DIRECTED|         45|       [Person]|       Cameron Crowe|       1957|         37|        [Movie]|       Jerry Maguire|The rest of his l...|           2000|\n|       0|  DIRECTED|         27|       [Person]|          Rob Reiner|       1947|         46|        [Movie]|         Stand By Me|For some, it\u0027s th...|           1986|\n|       0|  DIRECTED|         55|       [Person]|     James L. Brooks|       1940|         52|        [Movie]|  As Good as It Gets|A comedy from the...|           1997|\n|       0|  DIRECTED|         61|       [Person]|        Vincent Ward|       1956|         56|        [Movie]|What Dreams May Come|After life there ...|           1998|\n|       0|  DIRECTED|         66|       [Person]|         Scott Hicks|       1953|         62|        [Movie]|Snow Falling on C...|First loves last....|           1999|\n|       0|  DIRECTED|         72|       [Person]|         Nora Ephron|       1941|         67|        [Movie]|     You\u0027ve Got Mail|At odds in life.....|           1998|\n|       0|  DIRECTED|         72|       [Person]|         Nora Ephron|       1941|         73|        [Movie]|Sleepless in Seattle|What if someone y...|           1993|\n|       0|  DIRECTED|         79|       [Person]|John Patrick Stanley|       1950|         78|        [Movie]|Joe Versus the Vo...|A story of love, ...|           1990|\n|       0|  DIRECTED|         27|       [Person]|          Rob Reiner|       1947|         81|        [Movie]|When Harry Met Sally|Can two friends s...|           1998|\n|       0|  DIRECTED|         71|       [Person]|           Tom Hanks|       1956|         85|        [Movie]|   That Thing You Do|In every life the...|           1996|\n|       0|  DIRECTED|         91|       [Person]|       Howard Deutch|       1950|         87|        [Movie]|    The Replacements|Pain heals, Chick...|           2000|\n+--------+----------+-----------+---------------+--------------------+-----------+-----------+---------------+--------------------+--------------------+---------------+\nonly showing top 20 rows\n\n\u001b[1m\u001b[34mdf\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m \u003d [\u003crel.id\u003e: bigint, \u003crel.type\u003e: string ... 9 more fields]\n"
          }
        ]
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1598858773117_-449948507",
      "id": "paragraph_1598858773117_-449948507",
      "dateCreated": "2020-08-31 07:26:13.117",
      "dateStarted": "2020-08-31 10:17:03.447",
      "dateFinished": "2020-08-31 10:17:04.616",
      "status": "FINISHED"
    },
    {
      "text": "val df \u003d spark.read\n    .format(\"org.neo4j.spark.DataSource\")\n    .option(\"url\", \"bolt://neo4j:7687\")\n    .option(\"authentication.type\", \"basic\")\n    .option(\"authentication.basic.username\", \"neo4j\")\n    .option(\"authentication.basic.password\", \"zeppelin\")\n    .option(\"relationship.nodes.map\", \"true\")\n    .option(\"relationship\", \"DIRECTED\")\n    .option(\"relationship.source.labels\", \"Person\")\n    .option(\"relationship.target.labels\", \"Movie\")\n    .load\n    \ndf.select(\"\u003csource\u003e\").collectAsList().get(0).get(0)\n",
      "user": "anonymous",
      "dateUpdated": "2020-08-31 10:18:21.529",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "\u001b[1m\u001b[34mdf\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m \u003d [\u003crel.id\u003e: bigint, \u003crel.type\u003e: string ... 2 more fields]\n\u001b[1m\u001b[34mres18\u001b[0m: \u001b[1m\u001b[32mAny\u001b[0m \u003d Map(name -\u003e \"Lana Wachowski\", born -\u003e 1965, \u003clabels\u003e -\u003e [\"Person\"], \u003cid\u003e -\u003e 6)\n"
          }
        ]
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1598868810416_-860533122",
      "id": "paragraph_1598868810416_-860533122",
      "dateCreated": "2020-08-31 10:13:30.416",
      "dateStarted": "2020-08-31 10:18:21.545",
      "dateFinished": "2020-08-31 10:18:22.113",
      "status": "FINISHED"
    },
    {
      "text": "val df \u003d spark.read\n    .format(\"org.neo4j.spark.DataSource\")\n    .option(\"url\", \"bolt://neo4j:7687\")\n    .option(\"authentication.type\", \"basic\")\n    .option(\"authentication.basic.username\", \"neo4j\")\n    .option(\"authentication.basic.password\", \"zeppelin\")\n    .option(\"query\", \"MATCH (n:Movie {title: \u0027Unforgiven\u0027})-[r]-(p:Person) RETURN labels(p) as labels, type(r) as rel, p.name as name\")\n    .load\n    \ndf.show()",
      "user": "anonymous",
      "dateUpdated": "2020-08-31 11:33:56.229",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+--------+--------+----------------+\n|     rel|  labels|            name|\n+--------+--------+----------------+\n|DIRECTED|[Person]|  Clint Eastwood|\n|REVIEWED|[Person]|Jessica Thompson|\n|ACTED_IN|[Person]|    Gene Hackman|\n|ACTED_IN|[Person]|  Richard Harris|\n|ACTED_IN|[Person]|  Clint Eastwood|\n+--------+--------+----------------+\n\n\u001b[1m\u001b[34mdf\u001b[0m: \u001b[1m\u001b[32morg.apache.spark.sql.DataFrame\u001b[0m \u003d [rel: string, labels: array\u003cstring\u003e ... 1 more field]\n"
          }
        ]
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1598869044668_-473974905",
      "id": "paragraph_1598869044668_-473974905",
      "dateCreated": "2020-08-31 10:17:24.668",
      "dateStarted": "2020-08-31 11:33:56.243",
      "dateFinished": "2020-08-31 11:33:56.623",
      "status": "FINISHED"
    },
    {
      "user": "anonymous",
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1598869313533_2059315222",
      "id": "paragraph_1598869313533_2059315222",
      "dateCreated": "2020-08-31 10:21:53.533",
      "status": "READY"
    }
  ],
  "name": "Reading",
  "id": "2FKBZ7EWF",
  "defaultInterpreterGroup": "spark",
  "version": "0.9.0-preview1",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false
  },
  "info": {}
}